id: dotnetOnlyWorkflow1
format_version: "1.0" # The version of the declarative spec being used to define this workflow.
workflow_version: "1.5" # The version of the workflow itself.
name: report_generation_pipeline
description: "A workflow that generates and publishes a report on a given topic."
suggested_inputs:
  events:
    - type: "research_requested"
      payload:
        topic: "Create a report on AI agents at Microsoft."

# Input that the workflow supports.
# The way the events get sent to the workflow may differ depending on the platform. Some platforms may support sending events directly to the workflow,
# while others may require using a chat completion interface similar to how local tool calls work.
inputs: # The structured inputs supported by the workflow.
  events:
    cloud_events:
      - type: "StartRequested"
        data_schema: 
          type: string
      - type: "StartARequested"
        data_schema: 
          type: string

# Schemas for the data types used in the workflow. These can be defined inline or referenced from an external schema.
schemas:
  research_data:
    type: object
    properties:
      summary: { type: string }
      articles: { type: array, items: { type: string } }
    required: [summary, articles]

  draft:
    type: object
    properties:
      content: { type: string }
      word_count: { type: integer }
    required: [content, word_count]

  report_feedback:
    type: object
    properties:
      passed: { type: boolean }
      content: { type: string }
      feedback: { type: string }
    required: [passed, content, feedback]

  report:
    type: object
    properties:
      content: { type: string }
      approval_reason: { type: string }
    required: [content, approval_reason]

# The nodes that make up the workflow. A node is a wrapper around something that can be invoked such as code, an agent, a tool, etc.
nodes:
  - id: kickoff
    type: dotnet # dotnet | python
    version: "1.0"
    description: "Kickoff the workflow"
    agent:
      type: "Microsoft.SemanticKernel.Process.UnitTests.Steps.KickoffStep, SemanticKernel.Process.UnitTests"
      id: kickoff_agent
    inputs:
      input:
        type: string
    agent_input_mapping:
      topic: "inputs.input"
    on_complete:
      - on_condition:
          type: Eval
          expression: "results.articles.length > '0'"
          emits:
            - event_type: data_fetched
              schema: 
                  $ref: "#/workflow/schemas/research_data"
              payload: "$agent.outputs.results"
      - on_condition:
          type: default
          emits:
            - event_type: data_fetch_no_results

  - id: a_step
    type: dotnet
    version: "1.0"
    description: "A step"
    inputs:
      research_data:
        schema:
          $ref: "#/workflow/schemas/research_data"
      last_feedback: 
        type: string
    agent:
      type: "Microsoft.SemanticKernel.Process.UnitTests.Steps.AStep, SemanticKernel.Process.UnitTests"
      id: a_step_agent
    on_complete:
      - on_condition:
          type: default
          emits:
            - event_type: draft_created
              schema: 
                  $ref: "#/workflow/schemas/draft"
              payload: "$agent.outputs.draft"

  - id: b_step
    type: dotnet
    version: "1.0"
    description: "B Step"
    agent:
      type: "Microsoft.SemanticKernel.Process.UnitTests.Steps.BStep, SemanticKernel.Process.UnitTests"
      id: b_step_agent
    on_complete:
      - on_condition:
          type: eval
          expression: "report_feedback.passed == 'true'"
          emits:
            - event_type: report_approved
              schema: 
              $ref: "#/workflow/schemas/report"
              payload:
                object:
                  content: "$agent.outputs.report_feedback.content"
                  approval_reason: "$agent.outputs.report_feedback.feedback"
      - on_condition:
          type: default
          emits:
            - event_type: report_rejected
              schema: 
                $ref: "#/workflow/schemas/report_feedback"
              payload: "$agent.outputs.report_feedback"
          updates:
            - variable: revision_count
              operation: increment
              value: 1
            - variable: last_feedback
              operation: set
              value: "$agent.outputs.report_feedback.feedback"

  - id: c_step
    type: dotnet
    version: "1.0"
    description: "C Step"
    agent: 
      type: "Microsoft.SemanticKernel.Process.UnitTests.Steps.CStep, SemanticKernel.Process.UnitTests"
      id: c_step_agent
    # inputs:
    #   type: string
    agent_input_mapping:
      event_payload: "$.inputs.report"
      event_type: "human_approval_request"
    on_complete:
      - on_condition:
          type: default
          emits:
            - event_type: human_approved
              schema: 
                $ref: "#/workflow/schemas/report"
          updates:
          - variable: approved_report
            operation: set
            value: "$agent.outputs.report"
          - variable: $workflow.thread
            operation: set
            value: "$agent.outputs.report"

# The orchestration of the workflow. This defines the sequence of events and actions that make up the workflow.
orchestration:

  - listen_for:
      event: "StartRequested"
      from: _workflow_
    then:
      - node: kickoff

  - listen_for:
      event: "StartARequested"
      from: kickoff
    then:
      - node: a_step
      - node: b_step

  - listen_for:
      all_of:
      - event: "AStepDone"
        from: a_step
      - event: "BStepDone"
        from: b_step
    then:
      - node: c_step
        inputs:
          aStepData: a_step.AStepDone
          bStepData: b_step.BStepDone
  
  - listen_for:
      event: "CStepDone"
      from: c_step
    then:
      - node: kickoff

  - listen_for:
      event: "ExitRequested"
      from: c_step
    then:
      - node: End
