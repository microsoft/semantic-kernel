id: two_agent_math_chat
format_version: "1.0"
name: student_teacher_chat
description:
  A workflow that has student and teacher that does question answering
  about math
inputs:
  messages:
  events:
    cloud_events:
      - type: "input_message_received"
        data_schema: 
          type: string
variables: {}
schemas: {}
nodes:
  - id: Student
    type: declarative
    version: "1.0"
    description: Solves problem
    agent:
      type: foundry_agent
      id: "{{student.id}}"
      name: "{{student.name}}"
      human_in_loop_mode: onNoMessage
      stream_output: true
    inputs:
      Question:
        type: messages
    on_invoke:
    on_error:
    on_complete:
      - on_condition:
          type: default
          emits:
            - event_type: Answer
              schema:
                type: messages
  - id: Teacher
    type: declarative
    version: "1.0"
    description: Giving the problem
    agent:
      type: foundry_agent
      id: "{{teacher.id}}"
      name: "{{teacher.name}}"
      human_in_loop_mode: never
      stream_output: true
    inputs:
      Answer:
        type: messages
    on_invoke:
    on_error:
    on_complete:
      - on_condition:
          type: default
          emits:
            - event_type: Question
              schema:
                type: messages
  - id: End
    type: declarative
    version: "1.0"
    description: Terminal State

orchestration:
  - listen_for:
      event: input_message_received
      from: _workflow_
    then:
      - node: Student
  - listen_for:
      event: Answer
      from: Student
    then:
      - node: Teacher
  - listen_for:
      event: Question
      from: Teacher
      condition: Question.NotContains('[COMPLETE]')
    then:
      - node: Student
  - listen_for:
      event: Question
      from: Teacher
      condition: Question.Contains('[COMPLETE]')
    then:
      - node: End
