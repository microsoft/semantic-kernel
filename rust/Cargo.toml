[workspace]
resolver = "2"
members = [
    "semantic_kernel",
    "sk-openai",
    "sk-memory", 
    "sk-plan",
    "sk-agent",
    "sk-process",
    "examples/chat_gpt", 
    "examples/rag",
    "examples/todo_planner",
    "examples/agent_chat",
    "examples/invoice_process",
    "examples/getting_started",
    "examples/getting_started_with_agents",
    "examples/getting_started_with_text_search",
    "examples/getting_started_with_vector_stores",
    "examples/getting_started_with_processes",
    "examples/getting_started_with_planners",
    "examples/integration_showcase",
    "sk-macros",
]

[workspace.dependencies]
# Async runtime
tokio = { version = "1.0", features = ["full"] }
async-trait = "0.1"

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# HTTP client (for connectors)
reqwest = { version = "0.12", features = ["json"] }

# Proc macros
proc-macro2 = "1.0"
quote = "1.0"
syn = { version = "2.0", features = ["full"] }

# Testing
mockall = "0.12"

# UUID generation
uuid = { version = "1.0", features = ["v4"] }

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# CLI (for examples)
clap = { version = "4.0", features = ["derive"] }

# Environment variables
dotenv = "0.15"

# Random number generation
rand = "0.8"

[workspace.package]
version = "0.1.0"
edition = "2021"
license = "MIT"
authors = ["Semantic Kernel Rust Contributors"]
repository = "https://github.com/atsentia/semantic-kernel-rust"
homepage = "https://github.com/atsentia/semantic-kernel-rust"
keywords = ["ai", "llm", "semantic-kernel", "machine-learning"]
categories = ["api-bindings", "web-programming"]
